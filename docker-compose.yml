version: '3.8'

services:
  # PHP Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: php
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
    environment:
      DB_DATABASE: ${DB_DATABASE:-app}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_USERNAME: ${DB_USERNAME:-app}
      DB_HOST: ${DB_HOST}
    networks:
      - app-network
    depends_on:
      - mysql

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-app}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-app}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "3306:3306"

  # Adminer Service
  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - mysql

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - php

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
